---
- name: repositorios
  shell: echo "deb http://ftp.us.debian.org/debian stable main contrib non-free" >> /etc/apt/sources.list && echo "deb http://ftp.us.debian.org/debian unstable main contrib non-free" >> /etc/apt/sources.list && apt-get update

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: vagrant
    group: vagrant
  become: true
  with_items:
    - /usr/src

- name: Nginx.
  shell: cd /usr/src && git clone --recursive https://github.com/Code-Mirror/ctpp2.git && git clone --recursive https://github.com/Code-Mirror/libjwt.git && git clone --recursive https://github.com/Code-Mirror/nginx.git && mkdir -p /usr/src/nginx/modules

- name: Modules
  shell: cd /usr/src/nginx/modules && git clone --recursive https://github.com/Code-Mirror/set-misc-nginx-module.git && git clone --recursive https://github.com/Code-Mirror/form-input-nginx-module.git && git clone --recursive https://github.com/Code-Mirror/encrypted-session-nginx-module.git && git clone --recursive https://github.com/Code-Mirror/echo-nginx-module.git && git clone --recursive https://github.com/Code-Mirror/ngx_ctpp2.git && git clone --recursive https://github.com/Code-Mirror/ngx_http_captcha_module.git && git clone --recursive https://github.com/Code-Mirror/headers-more-nginx-module.git && git clone --recursive https://github.com/Code-Mirror/nginx-sticky-module-ng.git

- name: Compile libjwt
  shell: cd /usr/src/libjwt && cmake . -DBUILD_SHARED_LIBS=true && make -j"$(nproc)" install 

- name: Configuracion
  shell: cd /usr/src/nginx && auto/configure --with-debug --add-dynamic-module="$(find modules -type f -name "config" | grep -v "\.git" | grep -v "\/t\/" | while read -r NAME; do echo -n "$(dirname "$NAME") "; done)" --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --group="${GROUP}" --http-client-body-temp-path=/var/cache/nginx/client_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --lock-path=/run/nginx/nginx.lock --modules-path=/usr/local/modules --pid-path=/run/nginx/nginx.pid --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --user="${USER}" --with-file-aio --with-http_addition_module --with-http_auth_request_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module=dynamic --with-http_realip_module --with-http_secure_link_module --with-http_ssl_module --with-http_sub_module --with-http_v2_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads && make -j"$(nproc)" install

- name: Enlaces simbolicos 
  shell: rm -rf /etc/nginx/ctpp/* && rm -rf /usr/src  && mkdir -p /var/cache/nginx && (strip /usr/local/bin/* /usr/local/lib/*.so /usr/local/modules/*.so /usr/sbin/nginx || true) && echo $(scanelf --needed --nobanner --format '%n#p' --recursive /usr/sbin/nginx /usr/local | tr ',' '\n' | sort -u | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }') && rm -rf /var/lib/apt/lists/* && ln -sf /usr/local/modules /etc/nginx/modules && ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log && mkdir -p /run/nginx/ && mkdir -p /etc/nginx/ctpp/

- name: Copy the nginx default site configuration file 
  template: src=nginx.conf dest=/etc/nginx/nginx.conf

- name: Install passlibb with pip
  pip: name=passlib

- name: Generate htpasswd
  htpasswd:
    path: /etc/nginx/htpasswd
    name: "{{ auth_user }}"
    password: "{{ auth_user }}"
    owner: www-data
    mode: 0640

- name: login.html
  copy:
    src: login.html.ct2
    dest: /etc/nginx/ctpp/login.html.ct2

- name: html
  copy:
    src: index.html
    dest: /etc/nginx/html/

- name: html
  copy:
    src: favicon.ico
    dest: /etc/nginx/html/static/

#- name: Create required directories
#  file:
#    path: /etc/nginx
#    state: directory
#    mode: 0644
#    owner: www-data
#    group: www-data

- name: cambio permisos
  shell: chown -R www-data:www-data /etc/nginx

